name: Dogfood test and release process for the slack workflow canvas.

# This workflow builds and uses the update-slack-workflow-canvas action to test
# itself using the `./run-from-env.sh` script.


on:
  push:
    branches:
      # Anyone with write access can create a preview branch which will
      # run this workflow. This can be used to validate workflows from pull requests,
      # after reviewing there is nothing malicious in the inbound request.
      - update-slack-workflow-canvas*
      # Pushing to 'main' will update the @release version.
      # Due to the complexity of creating "preview" releases (currently),
      # this requires manual action from someone with push access to the
      # repository.
      # Since 'main' is a protected branch, we should not have any security
      # concerns with releasing here. (However, as this is a public repo,
      # we should -not- automatically build preview branches for all
      # pull requests).
      - main

env:
  ACTION_DIR: update-slack-workflow-canvas
  SLACK_BOT_TOKEN: ${{ secrets.ACTIONS_SLACK_BOT_TOKEN }}
  ACTION_CHANNEL: "#iam-bots"
  GHCR_IMAGE_REPO: ghcr.io/uwit-iam/update-slack-workflow-canvas-action
  SLACK_CANVAS_ID: "${{ github.run_id }}.${{ github.run_number }}"

jobs:
  push-action-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.IAM_GCR_REPO }}
          service_account_key: ${{ secrets.GCR_TOKEN }}
          export_default_credentials: true
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: create-vars
        name: Creating workflow variables
        env:
          FINGERPRINT: ${{ hashFiles(env.ACTION_DIR) }}
          SHA: ${{ github.sha }}
          COMMIT_URL_BASE: https://github.com/${{ github.repository }}/commit
        run: |
          export SHORT_SHA=${SHA:0:9}
          test -n "${SHORT_SHA}" || exit 1
          test -n "${FINGERPRINT}" || exit 1
          echo "::set-output name=fingerprint::${FINGERPRINT:0:16}"
          echo "::set-output name=short-sha::$SHORT_SHA"
          echo "::set-output name=commit-url::$COMMIT_URL_BASE/$SHA"
      - name: Pull base image and rebuild action
        run: |
          docker build \
            --build-arg FINGERPRINT \
            -t action -f $ACTION_DIR/Dockerfile \
            ./$ACTION_DIR
        env:
          FINGERPRINT: ${{ steps.create-vars.outputs.fingerprint }}
      - name: Create slack workflow canvas
        env:
          ACTION_JSON: >
            {
              "description": "Push and test the slack workflow canvas action",
              "canvasId": "${{ env.SLACK_CANVAS_ID }}",
              "channel": "${{ env.ACTION_CHANNEL }}",
              "steps": [
                {
                  "stepId": "create-from-json",
                  "description": "Create a workflow and step from json",
                  "status": "succeeded"
                }
              ]
            }
          ACTION_COMMAND: create-canvas
        run: ./$ACTION_DIR/run-from-env.sh
      - name: 'Create step in slack canvas & generate step id'
        env:
          ACTION_COMMAND: create-step
          ACTION_WF_STATUS: in progress
          ACTION_DESCRIPTION: >
            Build action image from
            <https://github.com/UWIT-IAM/actions/commit/${{ github.sha }} |
            ${{ steps.create-vars.outputs.short-sha }}>
        id: named-step-test
        run: $ACTION_DIR/run-from-env.sh
      - name: 'Create step in slack canvas with id: push-action-image'
        env:
          ACTION_COMMAND: create-step
          ACTION_DESCRIPTION: Push action image for commit
          ACTION_STEP_ID: push-action-image
        run: $ACTION_DIR/run-from-env.sh
      - if: github.ref == 'refs/heads/main'
        name: 'Create step in slack canvas with id: prepare-for-release'
        env:
          ACTION_COMMAND: create-step
          ACTION_DESCRIPTION: Prepare image for release
          ACTION_STEP_ID: prepare-for-release
        run: $ACTION_DIR/run-from-env.sh
      - name: 'Add change context artifact to canvas'
        env:
          ACTION_COMMAND: add-artifact
        run: |
          BRANCH=$(basename ${{ github.ref }})
          export ACTION_DESCRIPTION=$(cat << EOF
            *Commit*
            <${{ steps.create-vars.outputs.commit-url }}
            | ${{ steps.create-vars.outputs.short-sha }}>,
            *Target Branch* <https://github.com/uwit-iam/actions/tree/$BRANCH
            | $BRANCH>,
            *Author* <https://github.com/${{ github.actor }}
            | @${{ github.actor }}>
          EOF
          )
          $ACTION_DIR/run-from-env.sh
      - name: 'Update canvas: step with generated id succeeded'
        env:
          ACTION_COMMAND: update-workflow
          ACTION_STEP_ID: >
            ${{ steps.named-step-test.outputs.step-id }},
            push-action-image
          ACTION_STEP_STATUS: >
            succeeded,
            in progress
        run: $ACTION_DIR/run-from-env.sh
      - name: 'Update canvas: step push-action-image in progress'
        env:
          ACTION_COMMAND: update-workflow
          ACTION_STEP_ID: push-action-image
          ACTION_STEP_STATUS: in progress
        run: $ACTION_DIR/run-from-env.sh
      - name: Tag and push fingerprinted action image
        run: |
          docker tag action $GHCR_IMAGE_REPO:${{ steps.create-vars.outputs.fingerprint }}
          echo $GHCR_IMAGE_REPO:${{ steps.create-vars.outputs.fingerprint }}
          docker push $GHCR_IMAGE_REPO:${{ steps.create-vars.outputs.fingerprint }}
      - name: 'Update canvas: step push-action-image succeeded'
        env:
          ACTION_COMMAND: update-workflow
          ACTION_STEP_ID: push-action-image
          ACTION_STEP_STATUS: succeeded
        run: $ACTION_DIR/run-from-env.sh
      - name: 'Update canvas: Add image artifact'
        env:
          ACTION_COMMAND: add-artifact
          ACTION_DESCRIPTION: >
            *Image*:
            <https://${{ env.GHCR_IMAGE_REPO }}:${{ steps.create-vars.outputs.fingerprint }}
            | ${{ steps.create-vars.outputs.fingerprint }}>
        run: $ACTION_DIR/run-from-env.sh
      - name: 'Update canvas: Remove succeeded steps'
        if: always()
        env:
          ACTION_COMMAND: remove-step
          ACTION_STEP_ID: '*'
          ACTION_STEP_STATUS: 'succeeded'
        run: $ACTION_DIR/run-from-env.sh
      - if: github.ref == 'refs/heads/main'
        name: 'Create step in slack canvas with id: prepare-for-release'
        env:
          ACTION_COMMAND: update-workflow
          ACTION_STEP_STATUS: in progress
          ACTION_STEP_ID: prepare-for-release
        run: $ACTION_DIR/run-from-env.sh
    outputs:
      source-fingerprint: ${{ steps.create-vars.outputs.fingerprint }}
      short-sha: ${{ steps.create-vars.outputs.short-sha }}
      commit-url: ${{ steps.create-vars.outputs.commit-url }}
  release-action:
    if: github.ref == 'refs/heads/main'
    needs: [push-action-image]
    runs-on: ubuntu-latest
    env:
      FINGERPRINT: ${{ needs.push-action-image.outputs.source-fingerprint }}
    steps:
      - uses: actions/checkout@main
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.IAM_GCR_REPO }}
          service_account_key: ${{ secrets.GCR_TOKEN }}
          export_default_credentials: true
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          docker pull $GHCR_IMAGE_REPO:$FINGERPRINT
          docker tag $GHCR_IMAGE_REPO:$FINGERPRINT action
      - env:
          ACTION_COMMAND: create-step
          ACTION_STEP_STATUS: in progress
          ACTION_STEP_ID: release-action-image
          ACTION_DESCRIPTION: >
            Tag image <https://${{ env.GHCR_IMAGE_REPO }}:${{ env.FINGERPRINT }}
            | ${{ env.FINGERPRINT }}> for release
        run: $ACTION_DIR/run-from-env.sh
      - env:
          ACTION_COMMAND: create-step
          ACTION_STEP_ID: validate-released-image
          ACTION_DESCRIPTION: Validate released image
        run: $ACTION_DIR/run-from-env.sh
      - env:
          ACTION_COMMAND: update-workflow
          ACTION_STEP_STATUS: succeeded
          ACTION_STEP_ID: prepare-for-release
        run: $ACTION_DIR/run-from-env.sh
      - run: |
          docker pull $GHCR_IMAGE_REPO:$FINGERPRINT
          docker tag $GHCR_IMAGE_REPO:$FINGERPRINT $GHCR_IMAGE_REPO:release
          docker push $GHCR_IMAGE_REPO:release
      - if: failure()
        env:
          ACTION_COMMAND: update-workflow
          ACTION_STEP_STATUS: failed
          ACTION_STEP_ID: release-action-image
        run: $ACTION_DIR/run-from-env.sh
      - env:
          ACTION_COMMAND: update-workflow
          ACTION_STEP_ID: release-action-image
          ACTION_STEP_STATUS: succeeded
          ACTION_WORKFLOW_STATUS: succeeded
        run: $ACTION_DIR/run-from-env.sh
  validate-release-image:
    if: github.ref == 'refs/heads/main'
    needs: [push-action-image, release-action]
    runs-on: ubuntu-latest
    env:
      FINGERPRINT: ${{ needs.push-action-image.outputs.source-fingerprint }}
    steps:
      - uses: actions/checkout@main
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.IAM_GCR_REPO }}
          service_account_key: ${{ secrets.GCR_TOKEN }}
          export_default_credentials: true
      - name: 'Update workflow using standard actions syntax'
        uses: UWIT-IAM/actions/update-slack-workflow-canvas@release
        with:
          command: update-workflow
          step-id: validate-released-image
          step-status: succeeded
  validate-main-image:
    if: github.ref == 'refs/heads/main'
    needs: [push-action-image, release-action]
    runs-on: ubuntu-latest
    env:
      FINGERPRINT: ${{ needs.push-action-image.outputs.source-fingerprint }}
    steps:
      - uses: actions/checkout@main
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.IAM_GCR_REPO }}
          service_account_key: ${{ secrets.GCR_TOKEN }}
          export_default_credentials: true
      - name: 'Update workflow using standard actions syntax'
        uses: UWIT-IAM/actions/update-slack-workflow-canvas@main
        with:
          command: update-workflow
          step-id: validate-released-image
          step-status: succeeded
  finalize-workflow:
    if: always()
    env:
      FINGERPRINT: ${{ needs.push-action-image.outputs.source-fingerprint }}
    needs: [push-action-image, release-action, validate-release-image]
    runs-on: ubuntu-latest
    steps:
      - if: always()
        uses: actions/checkout@main
      - if: always()
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.IAM_GCR_REPO }}
          service_account_key: ${{ secrets.GCR_TOKEN }}
          export_default_credentials: true
      - if: always()
        run: |
          docker pull $GHCR_IMAGE_REPO:$FINGERPRINT
          docker tag $GHCR_IMAGE_REPO:$FINGERPRINT action
      - if: failure()
        env:
          ACTION_COMMAND: finalize-workflow
          ACTION_WF_STATUS: failed
        run: $ACTION_DIR/run-from-env.sh --build
      - if: success()
        env:
          ACTION_COMMAND: finalize-workflow
          ACTION_WF_STATUS: succeeded
        run: $ACTION_DIR/run-from-env.sh
